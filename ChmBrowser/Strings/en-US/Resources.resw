<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About.Text" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AboutButton.Label" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="AfterPDFLink.Text" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>CHM Reader</value>
  </data>
  <data name="AutoZoom.Header" xml:space="preserve">
    <value>auto zoom</value>
  </data>
  <data name="AutoZoom.OffContent" xml:space="preserve">
    <value>off</value>
  </data>
  <data name="AutoZoom.OnContent" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="BeforePDFLink.Text" xml:space="preserve">
    <value>Acknowledgment: The CHM parser used in this app is based on the open source project </value>
  </data>
  <data name="Bookshelf.Text" xml:space="preserve">
    <value>books</value>
  </data>
  <data name="Bottom.Label" xml:space="preserve">
    <value>bottom</value>
  </data>
  <data name="Browse.Text" xml:space="preserve">
    <value>browse</value>
  </data>
  <data name="Contents.Text" xml:space="preserve">
    <value>contents</value>
  </data>
  <data name="ContentsButton.Label" xml:space="preserve">
    <value>contents</value>
  </data>
  <data name="Copying" xml:space="preserve">
    <value>copying file...</value>
  </data>
  <data name="GoBack.Label" xml:space="preserve">
    <value>go back</value>
  </data>
  <data name="GoForward.Label" xml:space="preserve">
    <value>go forward</value>
  </data>
  <data name="IconStatement.Text" xml:space="preserve">
    <value>All icons in this app are from internet. Please contact me if any of them violates copyright restrictions.</value>
  </data>
  <data name="IconView.Label" xml:space="preserve">
    <value>icon view</value>
  </data>
  <data name="InvalidFile" xml:space="preserve">
    <value>{0}: invalid file</value>
  </data>
  <data name="ListView.Label" xml:space="preserve">
    <value>list view</value>
  </data>
  <data name="MailSubject" xml:space="preserve">
    <value>Feedback for CHM Reader</value>
  </data>
  <data name="MenuItemDelete.Text" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="Next.Label" xml:space="preserve">
    <value>next</value>
  </data>
  <data name="Opening" xml:space="preserve">
    <value>opening file...</value>
  </data>
  <data name="OpenSource.Text" xml:space="preserve">
    <value>Based on the rule of open source, I have shared my source code on Github (search 'ChmBrowser').</value>
  </data>
  <data name="PageZoom.Header" xml:space="preserve">
    <value>zoom</value>
  </data>
  <data name="Phone.Text" xml:space="preserve">
    <value>phone</value>
  </data>
  <data name="Pin.Text" xml:space="preserve">
    <value>pin to start</value>
  </data>
  <data name="Previous.Label" xml:space="preserve">
    <value>previous</value>
  </data>
  <data name="Rating.Content" xml:space="preserve">
    <value>rate me in store</value>
  </data>
  <data name="SendFeedback.Content" xml:space="preserve">
    <value>send feedback</value>
  </data>
  <data name="Settings.Label" xml:space="preserve">
    <value>settings...</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>CHM Reader</value>
  </data>
  <data name="Top.Label" xml:space="preserve">
    <value>top</value>
  </data>
  <data name="Unpin.Text" xml:space="preserve">
    <value>unpin from start</value>
  </data>
  <data name="Home.Label" xml:space="preserve">
    <value>home</value>
  </data>
  <data name="NightMode.Header" xml:space="preserve">
    <value>night mode</value>
  </data>
  <data name="NightMode.OffContent" xml:space="preserve">
    <value>off</value>
  </data>
  <data name="NightMode.OnContent" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="PageRead.Header" xml:space="preserve">
    <value>read</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="WrapMode.Header" xml:space="preserve">
    <value>force text to wrap</value>
  </data>
  <data name="WrapMode.OffContent" xml:space="preserve">
    <value>off</value>
  </data>
  <data name="WrapMode.OnContent" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="SwipeMode.Header" xml:space="preserve">
    <value>swipe to navigate</value>
  </data>
  <data name="SwipeMode.OffContent" xml:space="preserve">
    <value>off</value>
  </data>
  <data name="SwipeMode.OnContent" xml:space="preserve">
    <value>on(no horizon scroll)</value>
  </data>
  <data name="PageControl.Header" xml:space="preserve">
    <value>control</value>
  </data>
  <data name="Outline.Label" xml:space="preserve">
    <value>outline</value>
  </data>
</root>